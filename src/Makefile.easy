###############################################################################
#
# Makefile for rogue
#
# Rogue: Exploring the Dungeons of Doom
# Copyright (C) 1980-1983, 1985, 1999 Michael Toy, Ken Arnold and Glenn Wichman
# All rights reserved.
#
# See the file LICENSE.TXT for full copyright and licensing information.
#
###############################################################################

###############################################################################
# Site configuration occurs beneath this comment
# Typically ./configure (autoconf tools) configures this section
# This section could be manually configured if autoconf/configure fails
###############################################################################

SHELL= bash

DISTNAME= rogue5.4.5
PACKAGE_TARNAME= rogue-5.4.5
PROGRAM= rogue

O= o

AT= @

#CC= gcc
CC= gcc

#CFLAGS=
CFLAGS=

#COPT= -O3
COPT= -O3

#LIBS= -lcurses
LIBS=  -lncurses

#RM= rm -f
RM= rm -f

#GROFF= groff
GROFF= groff

#NROFF= nroff
NROFF= nroff

#TBL= tbl
TBL= tbl

#COLCRT= colcrt
COLCRT= colcrt

#SED= sed
SED= sed

#SCOREFILE= rogue54.scr
SCOREFILE= .rogue.scr

#LOCKFILE= rogue54.lck
LOCKFILE= .rogue.lck

#GROUPOWNER= games
GROUPOWNER=

#CPPFLAGS= -DHAVE_CONFIG_H
CPPFLAGS= -DHAVE_CONFIG_H

#DISTFILE= $(PROGRAM)
DISTFILE= $(DISTNAME)-x86_64-unknown-linux-gnu

INSTALL= install

#INSTGROUP= -g games
INSTGROUP=
#INSTOWNER= -u root
INSTOWNER=

CHGRP= chgrp

MKDIR= mkdir

TOUCH= touch

RMDIR= rmdir

CHMOD= chmod

CP= cp

CTAGS= ctags

DESTDIR=

prefix= /usr/local
exec_prefix= ${prefix}
datarootdir= ${prefix}/share
datadir= ${datarootdir}
bindir= /usr/local/bin
mandir= ${datarootdir}/man
docdir= /usr/local/share/rogue5.4
man6dir= $(mandir)/man6

###############################################################################
# Site configuration occurs above this comment
# It should not be necessary to change anything below this comment
###############################################################################

HDRS     = rogue.h extern.h score.h
OBJS1    = vers.$(O) extern.$(O) armor.$(O) chase.$(O) command.$(O) common.$(O) \
           daemon.$(O) daemons.$(O) fight.$(O) init.$(O) io.$(O) list.$(O) \
           mach_dep.$(O) mdport.$(O) misc.$(O) monsters.$(O) \
           move.$(O) new_level.$(O)
OBJS2    = options.$(O) pack.$(O) passages.$(O) potions.$(O) rings.$(O) \
           rip.$(O) rooms.$(O) save.$(O) scrolls.$(O) state.$(O) sticks.$(O) \
           things.$(O) weapons.$(O) wizard.$(O) xcrypt.$(O)
OBJS     = $(OBJS1) $(OBJS2)
CFILES   = vers.c extern.c armor.c chase.c command.c daemon.c \
           daemons.c fight.c init.c io.c list.c mach_dep.c \
           main.c  mdport.c misc.c monsters.c move.c new_level.c \
           options.c pack.c passages.c potions.c rings.c rip.c \
           rooms.c save.c scrolls.c state.c sticks.c things.c \
           weapons.c wizard.c xcrypt.c
MISC_C   = findpw.c scedit.c scmisc.c
DOCSRC   = rogue.me.in rogue.6.in rogue.doc.in rogue.html.in rogue.cat.in rogue.md.in
DOCS     = $(PROGRAM).doc $(PROGRAM).html $(PROGRAM).cat $(PROGRAM).me \
           $(PROGRAM).6 $(PROGRAM).md
AFILES   = configure Makefile.in configure.ac config.h.in config.sub config.guess \
           install-sh rogue.6.in rogue.me.in rogue.html.in rogue.doc.in rogue.cat.in
MISC     = Makefile.std LICENSE.TXT rogue54.sln rogue54.vcproj rogue.spec \
           rogue.png rogue.desktop

# Common Address Sanitizer (ASAN)
#
# For more info see: https://github.com/google/sanitizers/wiki/AddressSanitizer
# See also: https://developer.apple.com/documentation/xcode/diagnosing-memory-thread-and-crash-issues-early
#
# The following Address Sanitizer (ASAN) are common to both REHL9.2 (Linux) and macOS 14.0.
#
# By default, the Address Sanitizer is NOT enabled, not compiled into calc.
# To enable the Address Sanitizer, uncomment the appropriate lines in Makefile.local !!!
#
FSANITIZE= -Wno-invalid-command-line-argument
FSANITIZE+= -fsanitize=address
FSANITIZE+= -fsanitize=alignment
FSANITIZE+= -fsanitize=bool
FSANITIZE+= -fsanitize=enum
FSANITIZE+= -fsanitize=vptr
FSANITIZE+= -fsanitize=integer-divide-by-zero
FSANITIZE+= -fsanitize=float-divide-by-zero
FSANITIZE+= -fsanitize=float-cast-overflow
FSANITIZE+= -fsanitize=nonnull-attribute
FSANITIZE+= -fsanitize=returns-nonnull-attribute
FSANITIZE+= -fsanitize=null
FSANITIZE+= -fsanitize=object-size
FSANITIZE+= -fsanitize=shift
FSANITIZE+= -fsanitize=signed-integer-overflow
FSANITIZE+= -fsanitize=undefined
FSANITIZE+= -fsanitize=unreachable
FSANITIZE+= -fsanitize=vla-bound
FSANITIZE+= -fno-omit-frame-pointer
FSANITIZE+= -fno-common

####
# macOS Address Sanitizer (ASAN)
#
# This comment block was tested under:
#
#       macOS 14.0 with Apple clang version 15.0.0 (clang-1500.0.40.1) for arm64
#
# To use the Address Sanitizer, uncomment this set set of lines and recompile (make clobber all):
#
# FSANITIZE+= -fsanitize=nullability-arg
# FSANITIZE+= -fsanitize=nullability-assign
# FSANITIZE+= -fsanitize=nullability-return
# CFLAGS+= ${FSANITIZE}
# LDFLAGS+= ${FSANITIZE}
# DEBUG:= -O0 -g3
####

####
# RHEL (Linux) Address Sanitizer (ASAN)
#
# This comment block was tested under:
#
#       RHEL9.6 with clang version 19.1.7 (Red Hat, Inc. 19.1.7-2.el9)
#
# with these RPMs installed:
#
#       libasan-11.5.0-5.el9_5.x86_64
#       libubsan-11.5.0-5.el9_5.x86_64
#
# To use the Address Sanitizer, uncomment this set set of lines and recompile (make clobber all):
#
# CC:= clang
# FSANITIZE+= -fsanitize=bounds
# CFLAGS+= ${FSANITIZE}
# LDFLAGS+= ${FSANITIZE}
# COPT:= -O0 -g3
###

# add COPT to CFLAGS
#
CFLAGS+= ${COPT}

.SUFFIXES: .obj

.c.obj:
	$(CC) $(CFLAGS) $(CPPFLAGS) /c $*.c

.c.o:
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $*.c

all: config.h $(PROGRAM) findpw scedit stddocs

$(PROGRAM): $(HDRS) $(OBJS) main.$(O)
	$(CC) $(CFLAGS) $(LDFLAGS) $(OBJS) main.$(O) $(LIBS) -o $@

# in case someone forgot to use configure
#
config.h: config.h.easy
	$(RM) config.h
	$(CP) -f config.h.easy config.h

tags: ${CFILES} ${MISC_C}
	${CTAGS} -w ${CFILES} ${MISC_C}

clean:
	$(RM) $(OBJS1)
	$(RM) $(OBJS2)
	$(RM) main.$(O)
	$(RM) core a.exe a.out a.exe.stackdump $(PROGRAM) $(PROGRAM).exe
	$(RM) $(PROGRAM).tar $(PROGRAM).tar.gz $(PROGRAM).zip
	$(RM) -r $(DISTNAME)
	$(RM) findpw.$(O) scedit.$(O) scmisc.$(O)

clobber: clean
	$(RM) config.status
	$(RM) -r autom4te.cache
	$(RM) config.log
	$(RM) test

distclean maintainer-clean: clobber
	$(RM) config.h
	$(RM) Makefile

stddocs:
	sed -e 's/${AT}PROGRAM${AT}/rogue/' -e 's/${AT}SCOREFILE${AT}/.rogue.scr/' rogue.6.in > rogue.6
	sed -e 's/${AT}PROGRAM${AT}/rogue/' -e 's/${AT}SCOREFILE${AT}/.rogue.scr/' rogue.me.in > rogue.me
	sed -e 's/${AT}PROGRAM${AT}/rogue/' -e 's/${AT}SCOREFILE${AT}/.rogue.scr/' rogue.html.in > rogue.html
	sed -e 's/${AT}PROGRAM${AT}/rogue/' -e 's/${AT}SCOREFILE${AT}/.rogue.scr/' rogue.doc.in > rogue.doc
	sed -e 's/${AT}PROGRAM${AT}/rogue/' -e 's/${AT}SCOREFILE${AT}/.rogue.scr/' rogue.cat.in > rogue.cat
	sed -e 's/${AT}PROGRAM${AT}/rogue/' -e 's/${AT}SCOREFILE${AT}/.rogue.scr/' rogue.md.in > rogue.md

dist.src:
	$(MAKE) $(MAKEFILE) clean
	mkdir $(DISTNAME)
	cp $(CFILES) $(HDRS) $(MISC) $(AFILES) $(DISTNAME)
	tar cf $(DISTNAME)-src.tar $(DISTNAME)
	gzip -f $(DISTNAME)-src.tar
	rm -fr $(DISTNAME)

findpw: $(OBJS) findpw.$(O)
	$(CC) $(CFLAGS) $(LDFLAGS) $(OBJS) findpw.$(O) $(LIBS) -o $@

scedit: $(OBJS) scmisc.$(O) scedit.$(O)
	$(CC) $(CFLAGS) $(LDFLAGS) $(OBJS) scmisc.$(O) scedit.$(O) $(LIBS) -o $@

$(PROGRAM).doc: rogue.me
	if test "x$(GROFF)" != "x" -a "x$(SED)" != "x" ; then \
		$(GROFF) -P-c -t -me -Tascii rogue.me | $(SED) -e 's/.\x08//g' > $(PROGRAM).doc ;\
	elif test "x$(NROFF)" != "x" -a "x$(TBL)" != "x" -a "x$(COLCRT)" != "x" ; then \
		$(TBL) rogue.me | $(NROFF) -me | colcrt - > $(PROGRAM).doc ;\
	fi

$(PROGRAM).cat: rogue.6
	if test "x$(GROFF)" != "x" -a "x$(SED)" != "x" ; then \
	$(GROFF) -Tascii -man rogue.6 | $(SED) -e 's/.\x08//g' > $(PROGRAM).cat ;\
	elif test "x$(NROFF)" != "x" -a "x$(TBL)" != "x" -a "x$(COLCRT)" != "x" ; then \
	$(NROFF) -man rogue.6 | $(COLCRT) - > $(PROGRAM).cat ;\
	fi

dist: clean $(PROGRAM)
	tar cf $(DISTFILE).tar $(PROGRAM) LICENSE.TXT $(DOCS)
	gzip -f $(DISTFILE).tar

install: all
	-$(TOUCH) test
	-if test ! -f $(DESTDIR)$(SCOREFILE) ; then $(INSTALL) -m 0664 test $(DESTDIR)$(SCOREFILE) ; fi
	-$(INSTALL) -d -m 0755 $(DESTDIR)$(bindir)
	-$(INSTALL) -m 0755 $(PROGRAM) $(DESTDIR)$(bindir)/$(PROGRAM)
	-@if [[ -n "$(GROUPOWNER)" ]]; then \
	    echo $(CHGRP) $(GROUPOWNER) $(DESTDIR)$(SCOREFILE) ; \
	    $(CHGRP) $(GROUPOWNER) $(DESTDIR)$(SCOREFILE) ; \
	    echo $(CHGRP) $(GROUPOWNER) $(DESTDIR)$(bindir)/$(PROGRAM) ; \
	    $(CHGRP) $(GROUPOWNER) $(DESTDIR)$(bindir)/$(PROGRAM) ; \
	    echo $(CHMOD) 02755 $(DESTDIR)$(bindir)/$(PROGRAM) ; \
	    $(CHMOD) 02755 $(DESTDIR)$(bindir)/$(PROGRAM) ; \
	    echo $(CHMOD) 0464 $(DESTDIR)$(SCOREFILE) ; \
	    $(CHMOD) 0464 $(DESTDIR)$(SCOREFILE) ; \
         fi
	-$(INSTALL) -m 0755 findpw $(DESTDIR)$(bindir)/findpw
	-$(INSTALL) -m 0755 scedit $(DESTDIR)$(bindir)/scedit
	-$(INSTALL) -d -m 0755 $(man6dir)
	-$(INSTALL) -m 0644 rogue.6 $(DESTDIR)$(man6dir)/$(PROGRAM).6
	-$(INSTALL) -d -m 0755 $(DESTDIR)$(docdir)
	-$(INSTALL) -m 0644 rogue.doc $(DESTDIR)$(docdir)/$(PROGRAM).doc
	-$(INSTALL) -m 0644 rogue.html $(DESTDIR)$(docdir)/$(PROGRAM).html
	-$(INSTALL) -m 0644 rogue.cat $(DESTDIR)$(docdir)/$(PROGRAM).cat
	-$(INSTALL) -m 0644 LICENSE.TXT $(DESTDIR)$(docdir)/LICENSE.TXT
	-$(INSTALL) -m 0644 rogue.me $(DESTDIR)$(docdir)/$(PROGRAM).me
	-$(INSTALL) -m 0644 rogue.md $(DESTDIR)$(docdir)/$(PROGRAM).md
	-if test ! -f $(DESTDIR)$(LOCKFILE)  ; then $(INSTALL) -m 0666 test $(DESTDIR)$(LOCKFILE)  ; $(RM) $(DESTDIR)$(LOCKFILE) ; fi
	-$(RM) test

uninstall:
	-$(RM) $(DESTDIR)$(bindir)/$(PROGRAM)
	-$(RM) $(DESTDIR)$(man6dir)/$(PROGRAM).6
	-$(RM) $(DESTDIR)$(docdir)/$(PROGRAM).doc
	-$(RM) $(DESTDIR)$(docdir)/$(PROGRAM).html
	-$(RM) $(DESTDIR)$(docdir)/$(PROGRAM).cat
	-$(RM) $(DESTDIR)$(docdir)/LICENSE.TXT
	-$(RM) $(DESTDIR)$(docdir)/$(PROGRAM).me
	-$(RM) $(DESTDIR)$(LOCKFILE)
	-$(RMDIR) $(DESTDIR)$(docdir)

reinstall: uninstall install
